<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "It_will_help.CommonFormViewController.performField (It_will_help.CommonFormViewController)(Swift.String, section : ObjectiveC.XLFormSectionDescriptor) -&gt; ():CommonFormViewController.swift">
      </ContextState>
      <ContextState
         contextName = "It_will_help.SettingsViewController.didTapLogout (It_will_help.SettingsViewController)(Swift.AnyObject) -&gt; ():SettingsViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "appViewController!.navigationController">
            </PersistentString>
            <PersistentString
               value = "self.navigationController">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "It_will_help.LocationCore.(WhatIsThisPlace (It_will_help.LocationCore) -&gt; (ObjectiveC.CLLocation, cb : (place : Swift.String) -&gt; ()) -&gt; ()).(closure #1):LocationCore.swift">
         <PersistentStrings>
            <PersistentString
               value = "placemark!.postalCode">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Request.(responseSwiftyJSON(Request) -&gt; (OS_dispatch_queue?, options : NSJSONReadingOptions, completionHandler : (NSURLRequest, NSHTTPURLResponse?, JSON, NSError?) -&gt; ()) -&gt; Self).(closure #1).(closure #1):Extension+AlamofireSwiftyJSON.swift">
         <PersistentStrings>
            <PersistentString
               value = "result.data">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "It_will_help.AnswerViewController.viewDidLoad (It_will_help.AnswerViewController)() -&gt; ():AnswerViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "model">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "It_will_help.SliderPhotosFormViewCell.configure (It_will_help.SliderPhotosFormViewCell)() -&gt; ():SliderPhotosFormViewCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.formViewController()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "It_will_help.ColorFormViewCell.createLayer (It_will_help.ColorFormViewCell)() -&gt; ():ColorFormViewCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.contextView.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "It_will_help.FormFindAutoControllerView.formRowDescriptorValueHasChanged (It_will_help.FormFindAutoControllerView)(Swift.ImplicitlyUnwrappedOptional&lt;ObjectiveC.XLFormRowDescriptor&gt;, oldValue : Swift.ImplicitlyUnwrappedOptional&lt;Swift.AnyObject&gt;, newValue : Swift.ImplicitlyUnwrappedOptional&lt;Swift.AnyObject&gt;) -&gt; ():FormFindAutoControllerView.swift">
         <PersistentStrings>
            <PersistentString
               value = "newValue.value">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "It_will_help.LocationView.drawTextInRect (It_will_help.LocationView)(C.CGRect) -&gt; ():LocationView.swift">
      </ContextState>
      <ContextState
         contextName = "It_will_help.AppViewController.showProfile (It_will_help.AppViewController)() -&gt; ():AppViewController.swift">
      </ContextState>
      <ContextState
         contextName = "It_will_help.StartNavigatonController.presentStartupView (It_will_help.StartNavigatonController)() -&gt; ():StartNavigatonController.swift">
         <PersistentStrings>
            <PersistentString
               value = " self.visibleViewController">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "It_will_help.MyServerRestApiDelegate.handlerLogoutUser (It_will_help.MyServerRestApiDelegate)(It_will_help.User) -&gt; ():ServerRestApiDelegate.swift">
         <PersistentStrings>
            <PersistentString
               value = "controller.presentedViewController">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static It_will_help.AnswerPopupViewController.handlerAnswer (It_will_help.AnswerPopupViewController.Type)(Swift.ImplicitlyUnwrappedOptional&lt;ObjectiveC.LGActionSheet&gt;, Swift.ImplicitlyUnwrappedOptional&lt;Swift.String&gt;, Swift.UInt) -&gt; ():AnswerPopupViewController.swift">
      </ContextState>
      <ContextState
         contextName = "GPSTracking.GoogleMapsAutocompleteView.updateSearchResultsForSearchController (GPSTracking.GoogleMapsAutocompleteView)(ObjectiveC.UISearchController) -&gt; ():GoogleMapsAutocompleteView.swift">
         <PersistentStrings>
            <PersistentString
               value = "searchController.searchBar.text">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "It_will_help.SliderPhotosCollectionView.collectionView (It_will_help.SliderPhotosCollectionView)(ObjectiveC.UICollectionView, numberOfItemsInSection : Swift.Int) -&gt; Swift.Int:SliderPhotosCollectionView.swift">
         <PersistentStrings>
            <PersistentString
               value = "collection!.count ">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "It_will_help.MyCollectionTableView.(attachCollection (It_will_help.MyCollectionTableView) -&gt; () -&gt; ()).(closure #1).(closure #1):MyCollectionTableView.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.collection.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GPSTracking.GoogleMapsAutocompleteView.tableView (GPSTracking.GoogleMapsAutocompleteView)(ObjectiveC.UITableView, cellForRowAtIndexPath : ObjectiveC.NSIndexPath) -&gt; ObjectiveC.UITableViewCell:GoogleMapsAutocompleteView.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.searchResultPlaces[indexPath.row]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "It_will_help.RequestInfoViewController.setupFavorite (It_will_help.RequestInfoViewController)() -&gt; ():RequestInfoViewController.swift">
      </ContextState>
      <ContextState
         contextName = "GPSTracking.Model.handlerExtra (GPSTracking.Model)(SwiftyJSON.JSON) -&gt; ():Model.swift">
         <PersistentStrings>
            <PersistentString
               value = "json[key]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "It_will_help.MultiFormViewController.formRowHasBeenAdded (It_will_help.MultiFormViewController)(Swift.ImplicitlyUnwrappedOptional&lt;ObjectiveC.XLFormRowDescriptor&gt;, atIndexPath : Swift.ImplicitlyUnwrappedOptional&lt;ObjectiveC.NSIndexPath&gt;) -&gt; ():MultiFormViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "formRow.tag!">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "It_will_help.NewAnswerView.setupSection (It_will_help.NewAnswerView)() -&gt; ():NewAnswerView.swift">
      </ContextState>
      <ContextState
         contextName = "It_will_help.SliderPhotosCollectionView.imagePickerController (It_will_help.SliderPhotosCollectionView)(ObjectiveC.UIImagePickerController, didFinishPickingMediaWithInfo : Swift.Dictionary&lt;ObjectiveC.NSObject, Swift.AnyObject&gt;) -&gt; ():SliderPhotosCollectionView.swift">
      </ContextState>
      <ContextState
         contextName = "It_will_help.GoogleAutocompleteViewController.tableView (It_will_help.GoogleAutocompleteViewController)(ObjectiveC.UITableView, didSelectRowAtIndexPath : ObjectiveC.NSIndexPath) -&gt; ():GoogleAutocompleteViewController.swift">
      </ContextState>
      <ContextState
         contextName = "It_will_help.SliderPhotosCollectionView.configureStateMachine (It_will_help.SliderPhotosCollectionView)() -&gt; ():SliderPhotosCollectionView.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.view.bounds">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "It_will_help.SettingsViewController.(didTapLogout (It_will_help.SettingsViewController) -&gt; (Swift.AnyObject) -&gt; ()).(closure #1):SettingsViewController.swift">
      </ContextState>
      <ContextState
         contextName = "It_will_help.NewRequestViewController.didTapGoBack (It_will_help.NewRequestViewController)(Swift.AnyObject) -&gt; ():NewRequestViewController.swift">
      </ContextState>
      <ContextState
         contextName = "It_will_help.NewAnswerView.tableView (It_will_help.NewAnswerView)(ObjectiveC.UITableView, cellForRowAtIndexPath : ObjectiveC.NSIndexPath) -&gt; ObjectiveC.UITableViewCell:NewAnswerView.swift">
         <PersistentStrings>
            <PersistentString
               value = "indexPath.row">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static It_will_help.AppHelp.presentAppView (It_will_help.AppHelp.Type)() -&gt; ():AppHelp.swift">
      </ContextState>
      <ContextState
         contextName = "GPSTracking.AnswerPopupDetailViewController.viewDidLoad (GPSTracking.AnswerPopupDetailViewController)() -&gt; ():AnswerPopupDetailViewController.swift">
      </ContextState>
      <ContextState
         contextName = "It_will_help.ColorFormViewController.collectionView (It_will_help.ColorFormViewController)(ObjectiveC.UICollectionView, numberOfItemsInSection : Swift.Int) -&gt; Swift.Int:ColorFormViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "colors.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "It_will_help.CommonFormViewController.multivaluedInsertButtonTapped (It_will_help.CommonFormViewController)(Swift.ImplicitlyUnwrappedOptional&lt;ObjectiveC.XLFormRowDescriptor&gt;) -&gt; ():CommonFormViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.findTagNamed(formRow)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "It_will_help.RequestInfoViewController.didTapFavorite (It_will_help.RequestInfoViewController)() -&gt; ():RequestInfoViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "favorite.isSync()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "It_will_help.AppViewController.(showProfile (It_will_help.AppViewController) -&gt; () -&gt; ()).(closure #1):AppViewController.swift">
      </ContextState>
      <ContextState
         contextName = "It_will_help.CommonFormViewController.formRowHasBeenAdded (It_will_help.CommonFormViewController)(Swift.ImplicitlyUnwrappedOptional&lt;ObjectiveC.XLFormRowDescriptor&gt;, atIndexPath : Swift.ImplicitlyUnwrappedOptional&lt;ObjectiveC.NSIndexPath&gt;) -&gt; ():CommonFormViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "formRow.tag">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "It_will_help.ProfileInfoView.cropViewController (It_will_help.ProfileInfoView)(Swift.ImplicitlyUnwrappedOptional&lt;ObjectiveC.TOCropViewController&gt;, didCropToImage : Swift.ImplicitlyUnwrappedOptional&lt;ObjectiveC.UIImage&gt;, withRect : C.CGRect, angle : Swift.Int) -&gt; ():ProfileInfoView.swift">
      </ContextState>
      <ContextState
         contextName = "It_will_help.CAPSPageMenu.addPageAtIndex (It_will_help.CAPSPageMenu)(Swift.Int) -&gt; ():CAPSPageMenu.swift">
      </ContextState>
      <ContextState
         contextName = "It_will_help.NewRequestViewController.formRowDescriptorValueHasChanged (It_will_help.NewRequestViewController)(Swift.ImplicitlyUnwrappedOptional&lt;ObjectiveC.XLFormRowDescriptor&gt;, oldValue : Swift.ImplicitlyUnwrappedOptional&lt;Swift.AnyObject&gt;, newValue : Swift.ImplicitlyUnwrappedOptional&lt;Swift.AnyObject&gt;) -&gt; ():NewRequestViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "newValue as! Bool">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SliderPhotosFormViewCell.didMoveToSuperview() -&gt; ():SliderPhotosFormViewCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.rowDescriptor!">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "It_will_help.ColorFormViewController.(colors in _1939E719A4827A1BC5226F110E485132).didset : Swift.Array&lt;(Swift.String, ObjectiveC.UIColor)&gt;:ColorFormViewController.swift">
      </ContextState>
      <ContextState
         contextName = "GPSTracking.Model.performSync (GPSTracking.Model)(SwiftyJSON.JSON) -&gt; ():Model.swift">
      </ContextState>
      <ContextState
         contextName = "It_will_help.CAPSPageMenu.setUpUserInterface (It_will_help.CAPSPageMenu)() -&gt; ():CAPSPageMenu.swift">
         <PersistentStrings>
            <PersistentString
               value = "menuScrollView.frame">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "GPSTracking.User.fullname (GPSTracking.User)() -&gt; Swift.String:User.swift">
      </ContextState>
   </ContextStates>
</VariablesViewState>
